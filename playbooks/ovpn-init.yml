- hosts: 
    archlinux
    ubuntu
  remote_user: ansible
  tasks:
    
    #---vvv---OpenVPN install---vvv---#
    - name: install openvpn for Archlinux
      become: yes
      pacman:
        name:
          - openvpn
        state: present
      when: ansible_facts['distribution'] == 'Archlinux'

    - name: install openvpn for Ubuntu
      become: yes
      apt:
        name:
          - openvpn
        state: present
      when: ansible_facts['distribution'] == 'Ubuntu'
    #---^^^---OpenVPN install---^^^---#

    #---vvv---generate OpenVPN configs---vvv---#
    - name: check if certificates exists
      local_action: stat path={{ inventory_dir }}/openvpn/server-{{ ansible_hostname }}
      register: stat_ovpn_cfg

    - name: generate certificates if not exists
      local_action:
        module: command ./gen-new {{ ansible_hostname }}
        chdir: "{{ inventory_dir }}/easyrsa"
      when: not stat_ovpn_cfg.stat.exists

    - name: add remote address to configs
      local_action:
        module: replace
        path: "{{ inventory_dir }}/openvpn/client-{{ ansible_hostname }}/client.ovpn"
        regexp: ".*remote\s*.*<address>.*"
        replace: "remote {{ ansible_default_ipv4.address }}"

    #---^^^---generate OpenVPN configs---^^^---#
    
    - name: copy OpenVPN keys and templates to VPS
      become: yes
      copy:
        src: /home/berkut/projects/dvpn/openvpn/server-{{ansible_hostname}}/
        dest: /etc/openvpn/server
    
    - name: generate Diffie-Hellman keys if not exists
      become: yes
      openssl_dhparam:
        path: /etc/openvpn/server/dh.pem
        size: 2048
        state: present

    - name: copy OpenVPN client configs to system directory
      become: yes
      local_action:
        module: copy
        src: "{{ inventory_dir }}/openvpn/client-{{ ansible_hostname }}/client.ovpn"
        dest: /etc/openvpn/client/{{ ansible_hostname }}.conf
        force: yes

    #---vvv---Start OpenVPN servers---vvv---#
    - name: start open VPN servers
      become: yes
      systemd:
        state: started
        enabled: yes
        name: openvpn-server@server.service
      when: ansible_service_mgr == 'systemd'
    #---^^^---Start OpenVPN servers---^^^---#

    #---vvv---Systemd---vvv---#
    - name: start OpenVPN client for Systemd
      become: yes
      local_action:
        module: systemd
        state: started
        enabled: yes
        name: openvpn-client@{{ ansible_hostname }}.service
      when: ansible_service_mgr == 'systemd'
    #---^^^---Systemd---^^^---#
