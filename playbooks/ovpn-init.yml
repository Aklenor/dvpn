- hosts: 
    archlinux
    ubuntu
  remote_user: ansible
  tasks:
    
    #---vvv---OpenVPN install---vvv---#
    - name: install openvpn for Archlinux
      become: yes
      pacman:
        name:
          - openvpn
        state: present
      when: ansible_facts['distribution'] == 'Archlinux'

    - name: install openvpn for Ubuntu
      become: yes
      apt:
        name:
          - openvpn
        state: present
      when: ansible_facts['distribution'] == 'Ubuntu'
    #---^^^---OpenVPN install---^^^---#

    #---vvv---generate certificates---vvv---#
    - name: check if server certificate exists
      local_action: 
        module: stat 
        path: "{{ inventory_dir }}/easyrsa/pki/issued/server-{{ ansible_hostname }}.crt"
      register: server_crt

    - name: generate server certificates if not exists
      local_action:
        module: command easyrsa build-server-full "server-{{ ansible_hostname }}" nopass
        chdir: "{{ inventory_dir }}/easyrsa"
      when: not server_crt.stat.exists
      
    - name: check if client certificate exists
      local_action: 
        module: stat 
        path: "{{ inventory_dir }}/easyrsa/pki/issued/client.crt"
      register: client_crt

    - name: generate client certificates if not exists
      local_action:
        module: command easyrsa build-client-full "client" nopass
        chdir: "{{ inventory_dir }}/easyrsa"
      when: not client_crt.stat.exists

    #---^^^---generate cerfificates---^^^---#
    
    #---vvv---OpenVPN server setup---vvv---#
    - name: copy OpenVPN certificates and keys to VPS 
      become: yes 
      copy:
        src: "{{ inventory_dir }}/easyrsa/pki/{{ item.src }}"
        dest: "/etc/openvpn/server/{{ item.dest }}"
      with_items:
        - { src: "ca.crt", dest: "ca.crt" }
        - { src: "issued/server-{{ ansible_hostname }}.crt", dest: "server.crt" }
        - { src: "private/server-{{ ansible_hostname }}.key", dest: "server.key" }

    - name: copy OpenVPN config to VPS 
      become: yes 
      template:
        src: "{{ inventory_dir }}/templates/server.ovpn"
        dest: /etc/openvpn/server/server.conf
        force: yes

    - name: copy OpenVPN client config file to VPS 
      become: yes 
      template:
        src: "{{ inventory_dir }}/templates/DEFAULT"
        dest: /etc/openvpn/server/ccd/

    - name: generate Diffie-Hellman keys if not exists
      become: yes
      openssl_dhparam:
        path: /etc/openvpn/server/dh.pem
        size: 2048
        state: present
    #---^^^---OpenVPN server serup---^^^---#

    #---vvv---OpenVPN client setup---vvv---#
    - name: copy client certificates to system directory
      become: yes
      local_action:
        module: copy
        src: "{{ inventory_dir }}/easyrsa/pki/{{ item }}"
        dest: /etc/openvpn/client/
      with_items:
        - "ca.crt"
        - "issued/client.crt"
        - "private/client.key"

    - name: copy OpenVPN client to system directory
      become: yes
      local_action:
        module: template
        src: "{{ inventory_dir }}/templates/client.ovpn"
        dest: "/etc/openvpn/client/{{ ansible_hostname }}.conf"
        force: yes
    #---^^^---OpenVPN client serup---^^^---#

    #---vvv---Start OpenVPN servers---vvv---#
    - name: start open VPN servers
      become: yes
      systemd:
        state: restarted
        enabled: yes
        daemon_reload: yes
        name: openvpn-server@server.service
      when: ansible_service_mgr == 'systemd'
    #---^^^---Start OpenVPN servers---^^^---#

    #---vvv---Start OpenVPN clients---vvv---#
    - name: start OpenVPN client for Systemd
      become: yes
      local_action:
        module: systemd
        state: restarted
        enabled: yes
        daemon_reload: yes
        name: openvpn-client@{{ ansible_hostname }}.service
      when: ansible_service_mgr == 'systemd'
    #---^^^---Start OpenVPN clients---^^^---#
